name: CD

on:
  push:
    branches:
      - main
      - develop
    tags:        
      - '**'

env:
  APP_REPO: khoatdd/notejam
jobs:
  # build-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set ENV
  #     run: |
  #       SHORT_COMMIT_ID=`git rev-parse --short HEAD | tr -d '\n'`
  #       echo "SHORT_COMMIT_ID=$SHORT_COMMIT_ID" >> $GITHUB_ENV
  #       echo "APP_TAG=$SHORT_COMMIT_ID" >> $GITHUB_ENV
  #   - name: Docker meta
  #     id: docker_meta
  #     uses: crazy-max/ghaction-docker-meta@v1
  #     with:
  #       images: ${{ env.APP_REPO }} # list of Docker images to use as base name for tags
  #       tag-sha: true # add git short SHA as Docker tag
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Build and push
  #     id: docker_build
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: .
  #       file: ./Dockerfile
  #       platforms: linux/amd64,linux/arm64,linux/386
  #       push: ${{ github.event_name != 'pull_request' }}
  #       tags: ${{ steps.docker_meta.outputs.tags }}
  #       labels: ${{ steps.docker_meta.outputs.labels }}
  #   - uses: nick-invision/persist-action-data@v1
  #     with:
  #       data: ${{ steps.docker_meta.outputs.tags }}
  #       variable: TAGS
  #   - uses: nick-invision/persist-action-data@v1
  #     with:
  #       data: ${{ env.APP_TAG }}
  #       variable: APP_TAG
  deploy:
    # needs: build-push
    runs-on: ubuntu-latest
    container: alpine/helm:3.5.0-rc.2
    steps:
    - uses: actions/checkout@v2
    # - uses: nick-invision/persist-action-data@v1
    #   with:
    #     retrieve_variables: TAGS, APP_TAG
    - name: Install dependencies
      run: |
        apk add --update --no-cache gnupg groff less mailcap build-base python3-dev python3 libffi-dev libressl-dev gettext curl git bash
        curl -O https://bootstrap.pypa.io/get-pip.py
        python3 get-pip.py
        pip install --upgrade awscli==1.18.21 s3cmd==2.0.1 python-magic
        helm plugin install https://github.com/futuresimple/helm-secrets
        helm plugin install https://github.com/databus23/helm-diff --version master
        pwd
        mkdir -p '.kube'
        echo '${{ secrets.KUBECONFIG_DATA}}' > .kube/config
    - name: Deploy to Staging
      id: deploy-staging
      if: github.ref == 'refs/heads/develop'
      run: |
        helm upgrade notejam-staging charts/notejam --install --set image.tag=$APP_TAG --kubeconfig=./kube/config
      continue-on-error: true
    - name: Rollback Staging
      if: steps.deploy-staging.outcome == 'failure'
      run:
        helm rollback notejam-staging 0
    - name: Deploy to Prod
      id: deploy-prod
      if: github.ref == 'refs/heads/master'
      run: |
        helm upgrade notejam-prod charts/notejam --install --set image.tag=$APP_TAG --kubeconfig=./kube/config
      continue-on-error: true
    - name: Rollback Prod
      if: steps.deploy-prod.outcome == 'failure'
      run:
        helm rollback notejam-prod 0